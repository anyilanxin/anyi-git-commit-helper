import org.apache.tools.ant.filters.ReplaceTokens

plugins {
    id 'idea'
    id 'java'
    id 'org.jetbrains.intellij.platform' version '2.0.1'
    id "io.github.goooler.shadow" version "8.1.7"
}

repositories {
    maven { url 'https://maven.aliyun.com/repository/central/' }
    mavenCentral()
    intellijPlatform {
        defaultRepositories()
    }
}

group 'com.anyilanxin.plugin'

java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = "UTF-8"
}

// Read more: https://plugins.jetbrains.com/docs/intellij/tools-gradle-intellij-plugin.html
intellijPlatform {
    pluginConfiguration {
        name = "${pluginName}"
        version = "${pluginVersion}"
    }
    buildSearchableOptions = false
    sandboxContainer = file("${rootProject.rootDir}/idea-sandbox")
}


dependencies {
    intellijPlatform {
        intellijIdeaUltimate("2024.2")
        pluginVerifier()
        instrumentationTools()
        javaCompiler()
    }
    implementation 'org.apache.commons:commons-text:1.11.0'
    def lombok = "1.18.32"
    compileOnly "org.projectlombok:lombok:${lombok}"
    annotationProcessor "org.projectlombok:lombok:${lombok}"
    testAnnotationProcessor "org.projectlombok:lombok:${lombok}"

    testImplementation 'junit:junit:4.13.2'
}

processResources {
    filteringCharset = 'UTF-8'
    include('**/*.*')
    filesMatching('plugin.xml') {
        filter(ReplaceTokens, tokens: ['version': pluginVersion, 'pluginName': pluginName])
    }
}

publishPlugin {
    token.set(System.getenv("PUBLISH_TOKEN"))
}

shadowJar {
    archiveClassifier.set('')
}
